name: Go Build, Publish and Deploy to AKS with Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-go-application:${{ github.sha }}

  terraform-deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

  deploy-to-aks:
    needs: terraform-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubectl
        run: |
          az aks install-cli

      - name: Get AKS credentials
        run: |
          az aks get-credentials --name ${{ secrets.AKS_CLUSTER_NAME }} --resource-group ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/my-deployment my-container=ghcr.io/${{ github.repository_owner }}/my-go-application:${{ github.sha }}
